{"version":3,"file":"index.424e4bc8.js","sources":["../../vite/modulepreload-polyfill","../../plugin-vue:export-helper","../../src/assets/ts/utils.ts","../../src/assets/ts/config/service.ts","../../src/service/base/base.ts","../../src/service/base/interceptor.ts","../../src/service/base/common.ts","../../src/assets/ts/config/player.ts","../../src/service/song.ts","../../src/components/player/use-player-progress.ts","../../src/components/player/use-mode.ts","../../src/components/player/use-play.ts","../../src/components/player/use-progress.ts","../../src/components/player/progress-bar.vue","../../src/assets/ts/store.ts","../../src/components/player/use-favorite.ts","../../src/components/player/use-renderPlayer.ts","../../src/components/player/us-cd.ts","../../src/components/player/use-lyric.ts","../../src/components/base/scroll/useScroll.ts","../../src/components/base/scroll/Scroll.vue","../../src/assets/ts/constant/common.ts","../../src/components/player/use-middle-interactive.ts","../../src/components/player/Middle.vue","../../src/components/player/use-icon-click.ts","../../src/components/player/Player.vue","../../src/service/home.ts","../../src/components/base/slider/useSlider.ts","../../src/components/base/slider/Slider.vue","../../src/views/recommend/banner.vue","../../src/assets/ts/constant/home.ts","../../src/views/recommend/slider-icons.vue","../../src/views/recommend/recommend-slider.vue","../../src/views/recommend/Recommend.vue","../../src/components/base/song-list.vue","../../src/components/list-description.vue","../../src/assets/ts/song/packSong.ts","../../src/assets/ts/constant/music.ts","../../src/views/music-list/use-router.ts","../../src/components/list-tab.vue","../../src/views/music-list/use-scroll.ts","../../src/views/music-list/music-list.vue","../../src/components/comment/Comment.vue","../../src/router/index.ts","../../src/store/state.ts","../../src/store/mutations.ts","../../src/store/actions.ts","../../src/store/getters.ts","../../src/store/index.ts","../../src/assets/ts/dom.ts","../../src/directives/loading/directive.ts","../../src/main.ts"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","\nexport default (sfc, props) => {\n  const target = sfc.__vccOpts || sfc;\n  for (const [key, val] of props) {\n    target[key] = val;\n  }\n  return target;\n}\n","import _ from 'lodash'\n\nexport function ellipsis(ctx: string, saveCtxLength: number, postfix?: string): string {\n  const length = ctx.length\n\n  if (!postfix) {\n    postfix = ''\n  }\n  if (!postfix && length > saveCtxLength) {\n    postfix = '...'\n  }\n\n  return ctx.slice(0, saveCtxLength) + postfix\n}\n/**\n *\n * @param artists 作者信息\n * @returns string 作者名字\n */\nexport function ellipsisArtists(artists: any[]): string {\n  const names: string[] = []\n  for (let artist of artists) {\n    names.push(artist.name)\n  }\n\n  return names.join('/')\n}\n\nexport function warn(msg: string): void {\n  console.warn(msg)\n}\n/*\n * 序列化时间\n *\n * @param time\n * @returns 序列化后的时间格式\n */\nexport function serializeTime(time: number): string {\n  let hours = Math.floor(time / 3600).toString()\n  let minutes = Math.floor((time / 60) % 60).toString()\n  let seconds = Math.floor(time % 60).toString()\n\n  let serialize: string = `${\n    parseInt(hours) > 0 ? hours.padStart(2, '0') + ':' : ''\n  }${minutes.padStart(2, '0')}:${seconds.padStart(2, '0')}`\n\n  return serialize\n}\n\n// export function shuffle(list: any[]): any {\n//   if (!list.length) {\n//     return\n//   }\n//   let result: any[] = _.cloneDeep(list)\n//\n//   for (let i = 0; i < list.length; i++) {\n//     const randomIndex = getRandom(i, result)\n//     swap(result, i, randomIndex)\n//   }\n//\n//   function swap(arr: any[], i: number, j: number): void {\n//     let temp: any = arr[i]\n//     arr[i] = arr[j]\n//     arr[j] = temp\n//   }\n//\n//   return result\n// }\n// export function getRandom(i: number, list: any[]): number {\n//   let randomNum: number = Math.ceil(Math.random() * list.length)\n//\n//   if (randomNum === i) {\n//     randomNum = getRandom(i, list)\n//   }\n//\n//   return randomNum - 1\n// }\n","const service = {\n  baseURL: 'https://autumnfish.cn/',\n}\n\nexport default service\n","import axios, { AxiosPromise, AxiosRequestConfig } from 'axios'\nimport config from '@/assets/ts/config/service'\n\nexport const instance = axios.create({\n  baseURL: config.baseURL,\n})\n\nexport default function request<T = any>(url: string, options?: AxiosRequestConfig): AxiosPromise {\n  return instance.get<T>(url, options)\n}\n","import { instance } from '@/service/base/base'\n\nexport function addResponseInterceptor<T = any>(property: string[] | string): void {\n  instance.interceptors.response.use((res) => {\n    let data: any = res.data\n    if (typeof property === 'string') {\n      property = [property]\n    }\n\n    if (typeof data === 'undefined') {\n      return data\n    }\n\n    property.forEach((key) => {\n      if (typeof data[key] === 'undefined') {\n        return data\n      }\n      data = data[key]\n    })\n    return data\n  })\n}\n","import request, { instance } from '@/service/base/base'\nimport { AxiosPromise, AxiosRequestConfig } from 'axios'\nimport { addResponseInterceptor } from './interceptor'\n\nexport function dispatchRequest<T = any>(\n  url: string,\n  config?: AxiosRequestConfig,\n  property?: string | string[]\n): AxiosPromise {\n  // @ts-ignore\n  // 请求之前删除之前所有的response拦截器\n  const handlers = instance.interceptors.response.handlers\n\n  for (const id in handlers) {\n    instance.interceptors.response.eject(parseInt(id))\n  }\n  if (property) {\n    addResponseInterceptor(property)\n  }\n\n  return request<T>(url, config)\n}\n\nexport function throwIfNoData(): void {\n  throw new Error('No data')\n}\n","export const BitRate = 999000\n","import { AxiosPromise } from 'axios'\nimport { dispatchRequest } from '@/service/base/common'\nimport { addResponseInterceptor } from '@/service/base/interceptor'\nimport { BitRate } from '@/assets/ts/config/player'\n\nexport function getPlaylist(id: string | number): AxiosPromise {\n  const url: string = '/playlist/detail'\n\n  return dispatchRequest(\n    url,\n    {\n      params: {\n        id,\n      },\n    },\n    'playlist'\n  )\n}\n\nexport async function getAllTrack(id: string | number): Promise<AxiosPromise> {\n  const url: string = '/playlist/track/all'\n  await setTimeout(() => {})\n  return dispatchRequest(\n    url,\n    {\n      params: {\n        id,\n      },\n    },\n    'songs'\n  )\n}\n\nexport function getSongUrl(id: string | number): AxiosPromise {\n  const url = '/song/url'\n\n  return dispatchRequest(\n    url,\n    {\n      params: {\n        id,\n        br: BitRate,\n      },\n    },\n    ['data']\n  )\n}\n\nexport function getLyric(currentSong: any): AxiosPromise | Promise<any> {\n  const id = currentSong.id\n  const url: string = '/lyric/'\n\n  if (currentSong.lyric) {\n    return Promise.resolve(currentSong.lyric)\n  }\n\n  return dispatchRequest(\n    url,\n    {\n      params: {\n        id,\n      },\n    },\n    ['lrc']\n  )\n}\n\nexport function getSongComment(id: number | string, offset: number): AxiosPromise {\n  const url = '/comment/music/'\n  return dispatchRequest(\n    url,\n    {\n      params: {\n        id,\n        offset,\n      },\n    },\n    'data'\n  )\n}\n\nexport function getSongDetail(ids: number | string | string[] | number[]): AxiosPromise {\n  const url = '/song/detail/'\n\n  return dispatchRequest(\n    url,\n    {\n      params: {\n        ids,\n      },\n    },\n    'data'\n  )\n}\n","import { useStore } from 'vuex'\nimport { computed } from 'vue'\nimport mitt from 'mitt'\n\nexport type PlayerProgressEvent = {\n  onProgressStart: null\n  onProgressMove: number\n  onProgressEnd: null\n  onTimeUpdated: number\n}\nexport const emitter = mitt<PlayerProgressEvent>()\nexport function usePlayerProgress(setCurrentTime: (time: number) => void): any {\n  const store = useStore()\n\n  const playing = computed<boolean>(() => store.state.playing)\n  const duration = computed<number>(() => store.state.duration)\n\n  let audioCurrentTime: number\n  function onProgressStart(): void {\n    emitter.emit('onProgressStart', null)\n  }\n  function onProgressMove(offsetTime: number): void {\n    audioCurrentTime = offsetTime\n    emitter.emit('onProgressMove', offsetTime)\n  }\n  function onProgressEnd(): void {\n    if (audioCurrentTime >= 0) {\n      if (playing.value) {\n        setCurrentTime(audioCurrentTime)\n      } else {\n        store.commit('setCurrentTime', audioCurrentTime)\n      }\n    }\n    emitter.emit('onProgressEnd', null)\n  }\n\n  function onTeleportBar(percent: number): void {\n    const currentTime = (duration.value * percent) / 100\n    setCurrentTime(currentTime)\n  }\n\n  return {\n    onProgressStart,\n    onProgressMove,\n    onProgressEnd,\n    onTeleportBar,\n  }\n}\n","import { computed, ref, watch } from 'vue'\nimport { useStore } from 'vuex'\n\nexport const enum PLAY_MODE {\n  sequence = 'icon-icon_loop',\n  random = 'icon-loop',\n  loop = 'icon-LOOP_ONCE',\n}\n\nexport default function useMode(): any {\n  const store = useStore()\n\n  const playMode = computed(() => store.state.playMode)\n  const modeTipsStyle = ref<any>({})\n  let timer: any\n\n  const modeTipsText = computed<string>(() => {\n    let text: string\n    if (playMode.value === PLAY_MODE.sequence) {\n      text = '列表循环'\n    } else if (playMode.value === PLAY_MODE.random) {\n      text = '随机播放'\n    } else {\n      text = '单曲循环'\n    }\n\n    return text\n  })\n\n  watch(playMode, async (newMode) => {\n    clearTimeout(timer)\n    let marginTop: number = -20\n    let opacity: number = 0\n    setStyle()\n    marginTop = -40\n    opacity = 1\n    timer = setTimeout(() => {\n      setStyle()\n    }, 100)\n\n    timer = setTimeout(() => {\n      marginTop = -20\n      opacity = 0\n      setStyle()\n    }, 3000)\n\n    function setStyle(): void {\n      modeTipsStyle.value = {\n        marginTop: `${marginTop}px`,\n        opacity,\n      }\n    }\n  })\n\n  function toggleMode(): void {\n    store.dispatch('togglePlayMode')\n  }\n\n  return {\n    playMode,\n    modeTipsText,\n    modeTipsStyle,\n    toggleMode,\n  }\n}\n","import { computed, nextTick, ref, watch } from 'vue'\nimport { useStore } from 'vuex'\nimport { State } from '@/store/state'\nimport { getSongUrl } from '@/service/song'\nimport { warn } from '@/assets/ts/utils'\nimport { emitter } from '@/components/player/use-player-progress'\nimport { PLAY_MODE } from '@/components/player/use-mode'\n\nconst enum PlayIcon {\n  pause = 'icon-pause',\n  play = 'icon-play',\n}\n\nexport default function usePlay(): any {\n  const audioRef = ref<HTMLAudioElement | any>()\n  const readyPlay = ref<boolean>(false)\n\n  let playIcon = ref<PlayIcon>(PlayIcon.pause)\n\n  const store = useStore<State>()\n\n  const playing = computed<boolean>(() => store.state.playing)\n  const playlist = computed<any>(() => store.state.playlist)\n  const playMode = computed<PLAY_MODE>(() => store.state.playMode)\n  const currentSong = computed<any>(() => store.getters.currentSong)\n  const currentIndex = computed<number>(() => store.state.currentIndex)\n  const currentTime = computed<number>(() => store.state.currentTime)\n  const onProgress = computed(() => store.state.onProgress)\n\n  watch(currentSong, async (newSong) => {\n    if (!newSong) {\n      return\n    }\n    await nextTick()\n    getSongUrl(newSong.id).then((res) => {\n      if (Array.isArray(res)) {\n        audioRef.value.src = res[0].url\n        readyPlay.value = false\n      }\n    })\n  })\n\n  watch(playing, (newPlaying) => {\n    if (newPlaying) {\n      playIcon.value = PlayIcon.pause\n      setCurrentTime(currentTime.value)\n    } else {\n      playIcon.value = PlayIcon.play\n    }\n  })\n\n  watch(currentTime, (newTime) => {\n    if (newTime >= audioRef.value.duration && !onProgress.value) {\n      if (playMode.value === PLAY_MODE.loop) {\n        loop()\n      } else {\n        next()\n      }\n    }\n  })\n\n  function prev(): void {\n    const len: number = playlist.value.length\n    let index: number = currentIndex.value - 1\n    //歌单歌曲为0\n    if (len === 0 || !len) {\n      return\n    }\n    //歌单只有一首歌\n    if (len === 1) {\n      loop()\n    }\n\n    if (index === -1) {\n      index = len - 1\n    }\n\n    store.commit('setCurrentIndex', index)\n    store.dispatch('resetTime')\n  }\n  function next(): void {\n    const len: number = playlist.value.length\n    let index: number = currentIndex.value + 1\n    if (len === 0 || !len) {\n      return\n    }\n\n    if (len === 1) {\n      loop()\n    }\n    if (index === len - 1) {\n      index = 0\n    }\n    store.commit('setCurrentIndex', index)\n    store.dispatch('resetTime')\n  }\n  function togglePlay(): void {\n    if (playing.value) {\n      pause()\n    } else {\n      play()\n    }\n  }\n  function pause(): void {\n    store.commit('setPlaying', false)\n    audioRef.value.pause()\n  }\n  function play(): void {\n    store.commit('setPlaying', true)\n    audioRef.value.play()\n  }\n  function loop(): void {\n    audioRef.value.currentTime = 0\n    store.commit('setCurrentTime', 0)\n    play()\n  }\n  function canplay(): void {\n    if (!readyPlay.value) {\n      play()\n      readyPlay.value = true\n      store.dispatch('resetTime')\n      store.commit('setDuration', audioRef.value.duration)\n    }\n  }\n  function error() {\n    readyPlay.value = true\n    store.dispatch('resetTime')\n  }\n  function dispatchCurrentTime(): void {\n    const currentTime: number = audioRef.value.currentTime\n\n    if (!currentTime) {\n      warn('获取歌曲时间失败')\n      return\n    }\n\n    if (onProgress.value) {\n      return\n    }\n    emitter.emit('onTimeUpdated', currentTime)\n    store.commit('setCurrentTime', currentTime)\n  }\n  function setCurrentTime(seconds: number): void {\n    audioRef.value.currentTime = seconds\n  }\n\n  return {\n    audioRef,\n    playIcon,\n    next,\n    prev,\n    togglePlay,\n    pause,\n    play,\n    canplay,\n    error,\n    dispatchCurrentTime,\n    setCurrentTime,\n  }\n}\n","import { computed, ref, watch } from 'vue'\nimport { useStore } from 'vuex'\nimport { serializeTime } from '@/assets/ts/utils'\nimport { useMouse } from '@vueuse/core'\n// @ts-ignore\nimport { Emits } from '@/components/player/progress-bar.vue'\nimport { emitter } from '@/components/player/use-player-progress'\n\nexport default function useProgress(emits: Emits): any {\n  const { x } = useMouse()\n  const store = useStore()\n  const rootRef = ref<HTMLDivElement>()\n\n  const currentTime = computed(() => store.state.currentTime)\n  const duration = computed(() => store.state.duration)\n  const serializedTime = computed<any>(() => {\n    return {\n      currentTime: serializeTime(currentTime.value),\n      duration: serializeTime(duration.value),\n    }\n  })\n  let offsetPercent = ref<number>(0)\n  const btnScale = ref<string>('scale(1)')\n  const offsetStyle = computed(() => {\n    return {\n      width: `${offsetPercent.value}%`,\n    }\n  })\n  const offsetBtnStyle = computed(() => {\n    return {\n      transform: btnScale.value,\n      left: `${offsetPercent.value}%`,\n    }\n  })\n\n  const isTouch = ref<boolean>(false)\n  emitter.on('onTimeUpdated', (newTime) => {\n    if (!isTouch.value) {\n      offsetPercent.value = Math.floor((newTime / duration.value) * 100)\n    }\n  })\n\n  let barWidth: number = window.innerWidth * 0.7\n  let initX: number = window.innerWidth * 0.15 + 3\n\n  function onTouchStart(e: TouchEvent): void {\n    isTouch.value = true\n    store.commit('setOnProgress', true)\n    btnScale.value = 'scale(1.5)'\n    emits('onProgressStart')\n  }\n  function onTouchMove(): void {\n    const percent: number = Math.min((Math.max(x.value - initX, 0) / barWidth) * 100, 100)\n    offsetPercent.value = percent\n    store.commit('setCurrentTime', (percent * duration.value) / 100)\n    emits('onProgressMove', currentTime.value)\n  }\n  function onTouchEnd(): void {\n    emits('onProgressEnd')\n    isTouch.value = false\n    btnScale.value = 'scale(1)'\n    store.commit('setOnProgress', false)\n  }\n\n  function teleportProgressBar(e: PointerEvent): void {\n    const { layerX } = e\n    const percent: number = (layerX / barWidth) * 100\n    offsetPercent.value = percent\n\n    emits('onTeleportBar', percent)\n  }\n  return {\n    rootRef,\n    offsetStyle,\n    offsetBtnStyle,\n    serializedTime,\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd,\n    teleportProgressBar,\n  }\n}\n","<template>\n  <div class=\"progress-container\">\n    <p class=\"time currentTime\">\n      {{ serializedTime.currentTime }}\n    </p>\n    <div class=\"progress\" @click=\"teleportProgressBar\">\n      <div class=\"progress-bar\"></div>\n      <div class=\"progress-bar-left\" :style=\"offsetStyle\"></div>\n      <div\n        class=\"progress-bar-left-btn\"\n        :style=\"offsetBtnStyle\"\n        @touchstart.prevent=\"onTouchStart\"\n        @touchmove.prevent=\"onTouchMove\"\n        @touchend.prevent=\"onTouchEnd\"\n      ></div>\n    </div>\n    <p class=\"time duration\">\n      {{ serializedTime.duration }}\n    </p>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport useProgress from '@/components/player/use-progress'\n\nexport interface Emits {\n  (e: 'onProgressStart'): void\n  (e: 'onProgressMove', offsetTime: number): void\n  (e: 'onProgressEnd'): void\n  (e: 'onTeleportBar', percent: number): void\n}\n\nconst emits = defineEmits<Emits>()\n\nconst {\n  rootRef,\n  offsetStyle,\n  offsetBtnStyle,\n  serializedTime,\n  onTouchStart,\n  onTouchMove,\n  onTouchEnd,\n  teleportProgressBar,\n} = useProgress(emits)\n</script>\n\n<style lang=\"scss\" scoped>\n.progress-container {\n  display: flex;\n  width: 100%;\n  align-items: center;\n  .time {\n    font-size: 12px;\n    transform: scale(0.85);\n    color: $player-music-time-color;\n  }\n  .currentTime {\n    position: absolute;\n    left: 2.5%;\n  }\n  .duration {\n    position: absolute;\n    right: 2.5%;\n  }\n}\n.progress {\n  display: flex;\n  width: 70%;\n  margin: 0 auto;\n  position: relative;\n  align-items: center;\n  &-bar {\n    position: relative;\n    width: 100%;\n    height: 3px;\n    background-color: rgba(255, 255, 255, 0.1);\n    border-radius: 20px;\n  }\n  &-bar-left-btn {\n    position: absolute;\n    width: 7px;\n    height: 7px;\n    background-color: white;\n    border-radius: 50%;\n    transition: transform 0.1s;\n    &:hover {\n      transform: scale(2);\n      cursor: pointer;\n    }\n  }\n  &-bar-left {\n    background-color: white;\n    position: absolute;\n    height: 3px;\n    background-color: rgba(255, 255, 255, 0.6);\n  }\n}\n</style>\n","import storage from 'good-storage'\n\nconst FAVORITE_KEY: string = '__MUSIC__FAVORITE__'\n\nexport function load(): any[] {\n  return storage.get(FAVORITE_KEY, [])\n}\n\nexport function setFavorite(list: any[]): void {\n  storage.set(FAVORITE_KEY, list)\n}\n\nexport function isFavorite(targetSong: any, reactList?: any[]): boolean {\n  let flag: boolean = false\n  const list: any[] = reactList || load()\n  list.forEach((song) => {\n    if (song.id === targetSong.id) {\n      flag = true\n    }\n  })\n\n  return flag\n}\n","import { useStore } from 'vuex'\nimport { computed, ref } from 'vue'\nimport { isFavorite } from '@/assets/ts/store'\n\nconst enum FavoriteIcon {\n  favorite = 'icon-love1 mdui-text-color-red',\n  noFavorite = 'icon-Love',\n}\n\nexport default function useFavorite(): any {\n  const store = useStore()\n\n  const favoriteList = computed<any[]>(() => store.state.favoriteList)\n  const currentSong = computed(() => store.getters.currentSong)\n\n  const favoriteIcon = computed<any>(() => {\n    let result: string = FavoriteIcon.noFavorite\n    if (isFavorite(currentSong.value, favoriteList.value)) {\n      result = FavoriteIcon.favorite\n    }\n\n    return result\n  })\n  function toggleFavorite(): void {\n    store.dispatch('addFavorite')\n  }\n\n  return {\n    favoriteIcon,\n    toggleFavorite,\n  }\n}\n","import { useStore } from 'vuex'\nimport { computed } from 'vue'\n\nexport default function useRenderPlayer(): any {\n  const store = useStore()\n\n  const fullScreen = computed(() => store.state.fullScreen)\n  const currentSong = computed(() => store.getters.currentSong)\n\n  function handlerHiddenPlayer(): void {\n    store.commit('setFullScreen', false)\n  }\n\n  return {\n    fullScreen,\n    currentSong,\n    handlerHiddenPlayer,\n  }\n}\n","import { computed, ref, watch } from 'vue'\nimport { useStore } from 'vuex'\n\nexport default function useCd(): any {\n  const store = useStore()\n\n  const playing = computed(() => store.state.playing)\n\n  const cdRef = ref<HTMLImageElement | any>()\n\n  watch(playing, (newPlaying) => {\n    if (newPlaying) {\n      setTimeout(() => {\n        cdRef.value.style.animationPlayState = 'running'\n      }, 200)\n    } else {\n      setTimeout(() => {\n        cdRef.value.style.animationPlayState = 'paused'\n      }, 200)\n    }\n  })\n\n  return {\n    cdRef,\n  }\n}\n","import Lyric, { HandlerParams } from 'lyric-resolver'\nimport { getLyric } from '@/service/song'\nimport { computed, ref, watch } from 'vue'\nimport { useStore } from 'vuex'\nimport { MountedBScrollHTMLElement } from 'better-scroll'\nimport { emitter } from '@/components/player/use-player-progress'\n\nexport default function useLyric(): any {\n  const store = useStore()\n\n  const currentSong = computed<any>(() => store.getters.currentSong)\n  const playing = computed<boolean>(() => store.state.playing)\n  const fullScreen = computed<boolean>(() => store.state.fullScreen)\n\n  const currentLyric = ref<any>()\n  const currentLineNum = ref<number>(0)\n\n  watch(\n    currentSong,\n    async (newSong) => {\n      if (currentLyric.value) {\n        currentLyric.value.restore()\n      }\n\n      const lyric = await getLyric(newSong)\n\n      currentLyric.value = new Lyric(lyric.lyric, handlerLyric)\n\n      if (!currentSong.value.lyric) {\n        store.commit('addLyric', lyric)\n      }\n      emitter.on('onTimeUpdated', (time) => {\n        currentLyric.value.seek(time * 1000)\n        scrollToCurLine()\n      })\n      emitter.on('onProgressMove', (time) => {\n        currentLyric.value.seek(time * 1000)\n        scrollToCurLine()\n      })\n      playLyric()\n    },\n    {\n      immediate: true,\n    }\n  )\n\n  watch(\n    playing,\n    (newPlaying) => {\n      stopLyric()\n      if (newPlaying) {\n        playLyric()\n      } else {\n        stopLyric()\n      }\n    },\n    { immediate: true }\n  )\n\n  function handlerLyric(payload: HandlerParams): void {\n    const { curLineNum, txt } = payload\n    scrollToCurLine()\n  }\n\n  function scrollToCurLine(): void {\n    if (!fullScreen.value) {\n      return\n    }\n    const curLineNum = currentLyric.value.curLine\n    const scrollDom: MountedBScrollHTMLElement | any = document.querySelector('#lyricScrollRef')\n    const listDom = scrollDom.children[0].children\n\n    if (curLineNum > 10 && !scrollDom.scroll.isScrolling) {\n      scrollDom.scroll.scrollToElement(listDom[curLineNum - 5], 1000)\n    } else if (curLineNum <= 7 && !scrollDom.scroll.isScrolling) {\n      scrollDom.scroll.scrollToElement(listDom[0], 1000)\n    }\n  }\n\n  function playLyric(): void {\n    const currentLyricVal = currentLyric.value\n    if (currentLyricVal) {\n      currentLyricVal.play()\n    }\n  }\n\n  function stopLyric(): void {\n    const currentLyricVal = currentLyric.value\n    if (currentLyricVal) {\n      currentLyricVal.stop()\n    }\n  }\n\n  return {\n    currentLyric,\n    currentLineNum,\n  }\n}\n","import BScroll, { Options } from 'better-scroll'\nimport { ref, Ref, onMounted, onUnmounted } from 'vue'\n\nexport default function useScroll(wrapper: Ref, options: Options, emits: any): void {\n  const scroll = ref<any>(null)\n  let scrollVal: any\n\n  onMounted(() => {\n    scrollVal = scroll.value = new BScroll(wrapper.value, {\n      observeDOM: true,\n      ...options,\n    })\n\n    if (options.probeType && options.probeType > 0) {\n      scrollVal.on('scroll', (pos: any) => {\n        emits('scroll', pos)\n      })\n    }\n\n    wrapper.value.scroll = scrollVal\n    scrollVal.on('scrollStart', () => {\n      wrapper.value.scroll.isScrolling = true\n    })\n    scrollVal.on('scrollEnd', () => {\n      wrapper.value.scroll.isScrolling = false\n    })\n  })\n\n  onUnmounted(() => {\n    scrollVal.destroy()\n  })\n}\n","<template>\n  <div class=\"scroll-wrapper\" ref=\"scrollRef\" :style=\"scrollStyle\">\n    <slot></slot>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed } from 'vue'\nimport useScroll from './useScroll'\nimport { Options } from 'better-scroll'\n\ninterface Props {\n  options: Options\n  optionStyle?: any\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  options: () => {\n    return {\n      scrollX: false,\n      scrollY: true,\n      momentum: true,\n      bounce: true,\n    }\n  },\n})\nconst emits = defineEmits(['scroll'])\n\nconst scrollRef = ref<any>(null)\nconst scrollStyle = computed(() => {\n  if (props.optionStyle) {\n    return props.optionStyle\n  }\n\n  const height = `${window.innerHeight - scrollRef?.value?.offsetTop}px`\n\n  return {\n    height,\n  }\n})\n\nuseScroll(scrollRef, props.options, emits)\n</script>\n","export const DEFAULT_HEAD_HEIGHT = 56\n","import { useMouse } from '@vueuse/core'\nimport { computed, ref } from 'vue'\n\nconst enum MiddleView {\n  cd,\n  lyric,\n}\n\nexport function useMiddleInteractive(): any {\n  const { x } = useMouse()\n  const showView = ref<MiddleView>(MiddleView.cd)\n  let currentView: MiddleView = MiddleView.cd\n\n  const cdStyle = ref<any>(null)\n  const lyricStyle = ref<any>(null)\n\n  let initX: number = 0\n  let percent: number = 0\n\n  function onTouchStart(e: TouchEvent): void {\n    initX = e.touches[0].pageX\n  }\n\n  function onTouchMove(): void {\n    let deltaX = (x.value - initX) / window.innerWidth\n    if (deltaX < 0) {\n      percent = 1 + Math.min(Math.min(deltaX, 0), 1)\n    } else {\n      percent = Math.min(Math.max(deltaX, 0), 1)\n    }\n\n    if (showView.value === MiddleView.cd && deltaX < 0) {\n      if (percent < 0.8) {\n        currentView = MiddleView.lyric\n      }\n      cdStyle.value = {\n        opacity: percent,\n      }\n      lyricStyle.value = {\n        transform: `translateX(${percent * 100}%)`,\n      }\n    }\n    if (showView.value === MiddleView.lyric && deltaX > 0) {\n      if (percent > 0.2) {\n        currentView = MiddleView.cd\n      }\n      cdStyle.value = {\n        opacity: percent,\n      }\n      lyricStyle.value = {\n        transform: `translateX(${percent * 100}%)`,\n      }\n    }\n  }\n  function onTouchEnd(): void {\n    if (currentView === MiddleView.cd) {\n      showView.value = MiddleView.cd\n      cdStyle.value = {\n        opacity: 1,\n      }\n      lyricStyle.value = {\n        transform: 'translateX(100%)',\n        transitionDuration: '.3s',\n      }\n    } else {\n      showView.value = MiddleView.lyric\n      cdStyle.value = {\n        opacity: 0,\n      }\n      lyricStyle.value = {\n        transform: 'translateX(0%)',\n        transitionDuration: '.3s',\n      }\n    }\n  }\n\n  return { onTouchStart, onTouchMove, onTouchEnd, lyricStyle, cdStyle }\n}\n","<template>\n  <div\n    class=\"middle\"\n    @touchstart.prevent=\"onTouchStart\"\n    @touchmove.prevent=\"onTouchMove\"\n    @touchend.prevent=\"onTouchEnd\"\n  >\n    <div class=\"cd\" :style=\"cdStyle\">\n      <img class=\"cycle\" :src=\"`${currentSong.imgUrl}?param=500y500`\" ref=\"cdRef\" />\n    </div>\n    <div class=\"lyric\" :style=\"lyricStyle\">\n      <Scroll\n        :options=\"scrollOptions\"\n        :optionStyle=\"scrollOptionsStyle\"\n        v-if=\"currentLyric\"\n        id=\"lyricScrollRef\"\n      >\n        <ul class=\"lyric-txt\">\n          <li\n            class=\"lyric-line\"\n            :class=\"{\n              'lyric-active': currentLyric.curLine - 1 === index,\n            }\"\n            v-for=\"(line, index) in currentLyric.lines\"\n            :key=\"line\"\n          >\n            {{ line.txt }}\n          </li>\n        </ul>\n      </Scroll>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, reactive } from 'vue'\nimport { useStore } from 'vuex'\nimport useCd from '@/components/player/us-cd'\nimport useLyric from '@/components/player/use-lyric'\nimport Scroll from '@/components/base/scroll/Scroll.vue'\nimport { Options } from 'better-scroll'\nimport { DEFAULT_HEAD_HEIGHT } from '@/assets/ts/constant/common'\nimport { useMiddleInteractive } from '@/components/player/use-middle-interactive'\n\nconst store = useStore()\n\nconst currentSong = computed(() => store.getters.currentSong)\n//hooks\nconst { cdRef } = useCd()\nconst { currentLyric, currentLineNum } = useLyric()\nconst { onTouchStart, onTouchMove, onTouchEnd, lyricStyle, cdStyle } = useMiddleInteractive()\n\nconst scrollOptions = reactive<Options>({\n  scrollX: false,\n  scrollY: true,\n  probeType: 3,\n})\nconst scrollOptionsStyle = computed(() => {\n  const height = window.innerHeight - DEFAULT_HEAD_HEIGHT - window.innerHeight * 0.22 - 75\n\n  return {\n    height: `${height}px`,\n  }\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.middle {\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 75px;\n  bottom: 25%;\n  overflow: hidden;\n  .cd {\n    position: relative;\n    text-align: center;\n    z-index: 0;\n    top: 50px;\n    transition: opacity 0.2s;\n    img {\n      height: 225px;\n      width: 225px;\n      border: 5px solid rgba(255, 255, 255, 0.1);\n      animation: cd-rotate 30s infinite linear;\n    }\n    @keyframes cd-rotate {\n      from {\n        transform: rotate(0deg);\n      }\n      to {\n        transform: rotate(360deg);\n      }\n    }\n  }\n  .lyric {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    text-align: center;\n    transform: translateX(100%);\n    display: flex;\n    justify-content: center;\n    ul {\n      line-height: 40px;\n      font-size: 16px;\n      width: 90vw;\n      li {\n        color: $player-music-lyric-color;\n      }\n      .lyric-active {\n        color: #ffffff;\n      }\n    }\n  }\n}\n</style>\n","import { Ref } from 'vue'\n\nexport default function useIconClick(audioRef: Ref<HTMLAudioElement>): any {\n  function download(): void {\n    const url: string = audioRef.value.src || '/'\n    window.location.href = url\n  }\n\n  return {\n    download,\n  }\n}\n","<template>\n  <div class=\"player\">\n    <transition name=\"fade\">\n      <div class=\"normal-player\" v-if=\"fullScreen\">\n        <div class=\"background\">\n          <img class=\"background-img\" :src=\"`${currentSong.imgUrl}?param=300y300`\" />\n        </div>\n        <div class=\"player-content\">\n          <div class=\"mdui-toolbar\">\n            <a href=\"javascript:;\" class=\"mdui-btn mdui-btn-icon\" @click=\"handlerHiddenPlayer\">\n              <i class=\"mdui-icon material-icons iconfont icon-bottom\"></i>\n            </a>\n            <div class=\"mdui-toolbar-spacer\">\n              <div class=\"music-info\">\n                <p class=\"music-name\">\n                  {{ currentSong.name }}\n                </p>\n                <p class=\"music-author\">{{ ellipsisArtists(currentSong.artists) }}</p>\n              </div>\n            </div>\n            <a href=\"javascript:;\" class=\"mdui-btn mdui-btn-icon\">\n              <i class=\"mdui-icon material-icons iconfont icon-share\"></i>\n            </a>\n          </div>\n          <Middle></Middle>\n          <div class=\"player-bottom\">\n            <div class=\"player-bottom-icons-top\">\n              <i class=\"iconfont\" :class=\"favoriteIcon\" @click=\"toggleFavorite\"></i>\n              <i class=\"iconfont icon-download\" @click=\"download\"></i>\n              <i class=\"iconfont icon-sing\"></i>\n              <router-link :to=\"`/comment/${currentSong.id}`\">\n                <i class=\"iconfont icon-xiaoxi\"></i>\n              </router-link>\n              <i class=\"iconfont icon-Moreoptionshorizon\"></i>\n            </div>\n            <div class=\"mode-tips\" :style=\"modeTipsStyle\">{{ modeTipsText }}</div>\n            <progress-bar\n              @onProgressStart=\"onProgressStart\"\n              @onProgressMove=\"onProgressMove\"\n              @onProgressEnd=\"onProgressEnd\"\n              @onTeleportBar=\"onTeleportBar\"\n            ></progress-bar>\n            <div class=\"player-bottom-icons-bottom\">\n              <i class=\"iconfont\" :class=\"playMode\" @click=\"toggleMode\"></i>\n              <i class=\"iconfont icon-24gl-previous\" @click=\"prev\"></i>\n              <i class=\"iconfont play-icon\" :class=\"playIcon\" @click=\"togglePlay\"></i>\n              <i class=\"iconfont icon-24gl-next\" @click=\"next\"></i>\n              <i class=\"iconfont icon-bofangliebiao\"></i>\n            </div>\n          </div>\n        </div>\n      </div>\n    </transition>\n    <audio ref=\"audioRef\" @canplay=\"canplay\" @error=\"error\" @timeupdate=\"dispatchCurrentTime\"></audio>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ellipsisArtists } from '@/assets/ts/utils'\nimport usePlay from '@/components/player/use-play'\nimport ProgressBar from './progress-bar.vue'\nimport useFavorite from '@/components/player/use-favorite'\nimport { usePlayerProgress } from '@/components/player/use-player-progress'\nimport useRenderPlayer from '@/components/player/use-renderPlayer'\nimport Middle from './Middle.vue'\nimport useMode from '@/components/player/use-mode'\nimport useIconClick from '@/components/player/use-icon-click'\nimport { useMediaControls } from '@vueuse/core'\n\nconst { fullScreen, handlerHiddenPlayer, currentSong } = useRenderPlayer()\nconst {\n  audioRef,\n  error,\n  playIcon,\n  canplay,\n  next,\n  prev,\n  togglePlay,\n  pause,\n  play,\n  dispatchCurrentTime,\n  setCurrentTime,\n} = usePlay()\nconst { onProgressStart, onProgressMove, onProgressEnd, onTeleportBar } = usePlayerProgress(setCurrentTime)\n\nconst { toggleFavorite, favoriteIcon } = useFavorite()\nconst { download } = useIconClick(audioRef)\nconst { playMode, modeTipsText, toggleMode, modeTipsStyle } = useMode()\n</script>\n<style lang=\"scss\" scoped>\n.player {\n  .normal-player {\n    @include absolute-full();\n    z-index: 999;\n    overflow: hidden;\n    .background {\n      &-img {\n        position: absolute;\n        width: 100vw;\n        height: 100vh;\n        object-fit: cover;\n        z-index: 1;\n      }\n      &:after {\n        content: '';\n        @include absolute-full();\n        backdrop-filter: blur(30px);\n        background: $player-overlay-linear-color;\n        z-index: 2;\n      }\n    }\n    .player-content {\n      @include absolute-full();\n      z-index: 2;\n      .mdui-toolbar {\n        color: #ffffff;\n        line-height: 24px;\n        .mdui-toolbar-spacer {\n          text-align: center;\n          .music-info {\n            text-align: center;\n            .music-name {\n              display: flex;\n              flex-direction: column;\n              font-size: 18px;\n            }\n            .music-author {\n              font-size: 14px;\n              color: $player-music-author-color;\n              @include no-warp();\n            }\n          }\n        }\n      }\n    }\n    .player-bottom {\n      position: absolute;\n      bottom: 0;\n      .mode-tips {\n        position: absolute;\n        width: 80px;\n        height: 20px;\n        padding: 10px;\n        border-radius: 50px;\n        background-color: rgba(255, 255, 255, 0.95);\n        left: 50%;\n        margin-left: -50px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        margin-top: -20px;\n        transition: all 0.2s;\n        opacity: 0;\n      }\n      &-icons-top {\n        width: 100vw;\n        display: flex;\n        margin: 30px 0;\n        i,\n        a {\n          flex: 1;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          color: #ffffff;\n          font-size: 20px;\n        }\n      }\n      &-icons-bottom {\n        width: 100vw;\n        display: flex;\n        margin: 30px 0;\n        i {\n          flex: 1;\n          font-size: 24px;\n          color: #ffffff;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n        }\n        .play-icon {\n          font-size: 46px;\n        }\n      }\n    }\n  }\n}\n</style>\n","import { AxiosPromise } from 'axios'\nimport { dispatchRequest } from '@/service/base/common'\n\nexport function getBanner(): AxiosPromise {\n  const url = '/banner'\n  return dispatchRequest(url, {}, 'banners')\n}\n\nexport function getRecommend(): AxiosPromise {\n  const url = '/personalized/'\n\n  return dispatchRequest(\n    url,\n    {\n      params: {\n        limit: 6,\n      },\n    },\n    'result'\n  )\n}\n","import BScroll from 'better-scroll'\nimport { onMounted, ref, onUnmounted, Ref } from 'vue'\n\nexport default function useSlider(wrapper: Ref, options: Object): any {\n  const slider = ref<any>(null)\n  let scrollVal: any\n  onMounted(() => {\n    scrollVal = slider.value = new BScroll(wrapper.value, {\n      scrollX: true,\n      scrollY: false,\n      click: true,\n      ...options,\n    })\n  })\n\n  onUnmounted(() => {\n    scrollVal.destroy()\n  })\n\n  return {\n    slider,\n  }\n}\n","<template>\n  <div class='slider'>\n    <div\n      class='slider-wrapper'\n      ref='scrollRef'\n    >\n      <div class='slider-content'>\n        <slot></slot>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang='ts'>\nimport { ref } from 'vue'\nimport useSlider from './useSlider'\n\ninterface Props {\n  options: Object\n}\n\nconst props = defineProps<Props>()\n\nconst scrollRef = ref<any>(null)\n\nuseSlider(scrollRef, props.options)\n</script>\n\n<style lang='scss' scoped>\n.slider {\n  &-wrapper {\n    position: relative;\n    width: 100%;\n    white-space: nowrap;\n\n    .slider-content {\n      display: inline-block;\n    }\n  }\n}\n</style>","<template>\n  <div class=\"banner\" v-loading=\"!banners.length\">\n    <slider class=\"slider mdui-ripple\" v-if=\"banners && banners?.length\" :options=\"sliderOptions\">\n      <div class=\"banner-item\" v-for=\"item in banners\" :key=\"item\">\n        <a :href=\"item?.url\">\n          <img :src=\"item.imageUrl\" />\n        </a>\n      </div>\n    </slider>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref } from 'vue'\nimport { getBanner } from '@/service/home'\nimport { Options } from 'better-scroll'\nimport Slider from '@/components/base/slider/Slider.vue'\n\nconst sliderOptions = ref<Options>({\n  slide: true,\n  momentum: true,\n})\n\nconst banners = ref({})\ngetBanner().then((res) => {\n  banners.value = res\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.slider {\n  position: relative;\n  top: 0.5rem;\n  height: 0;\n  padding-bottom: 36%;\n\n  .banner-item {\n    position: relative;\n    display: inline-block;\n    text-align: center;\n    img {\n      width: 90%;\n      object-fit: cover;\n      border-radius: 5px;\n      height: 100%;\n    }\n  }\n}\n</style>\n","export interface Icons {\n  name: string\n  code: string\n}\n\nexport const HOME_SLIDER_ICONS: Icons[] = [\n  {\n    name: '每日推荐',\n    code: 'icon-' + getCalendarCode(new Date().getDate() - 1),\n  },\n  {\n    name: '歌单',\n    code: 'icon-musiclist',\n  },\n  {\n    name: '排行榜',\n    code: 'icon-paihangbang',\n  },\n  {\n    name: '直播',\n    code: 'icon-zhibo',\n  },\n  {\n    name: '数字专辑',\n    code: 'icon-zhuanji',\n  },\n  {\n    name: '音乐电台',\n    code: 'icon-diantai',\n  },\n  {\n    name: '游戏专区',\n    code: 'icon-game',\n  },\n]\n\nfunction getCalendarCode(item: number): string {\n  const code = []\n  const baseStr = 'rl'\n  for (let i = 0; i < 31; i++) {\n    let name = baseStr + i\n    code.push(name)\n  }\n  return code[item]\n}\n","<template>\n  <div class='slider-banner'>\n    <slider\n      v-if='icons.length'\n      class='slider'\n      :options='options'\n    >\n      <div\n        class='scroll-item'\n        v-for='item in icons'\n        :key='item'\n      >\n        <div class='icon-container mdui-ripple border-cycle mdui-color-red cycle'>\n          <i\n            class='iconfont'\n            :class='item.code'\n          ></i>\n        </div>\n        <p class='icons-title'>{{ item.name }}</p>\n      </div>\n    </slider>\n  </div>\n</template>\n\n<script setup lang='ts'>\nimport { ref } from 'vue'\nimport { HOME_SLIDER_ICONS, Icons } from '@/assets/ts/constant/home'\nimport { Options } from 'better-scroll'\nimport slider from '@/components/base/slider/Slider.vue'\n\nconst icons = ref<Icons[]>(HOME_SLIDER_ICONS)\nconst options = ref<Options>({\n\n})\n</script>\n\n<style lang='scss' scoped>\n.slider {\n  margin-top: 1rem;\n  width: 90%;\n  margin-left: 2.5%;\n\n  .scroll-item {\n    display: inline-block;\n    width: 20vw;\n    text-align: center;\n\n    .icon-container {\n      width: 14vw;\n      height: 14vw;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      margin: 0 auto;\n\n      .iconfont {\n        font-size: 25px;\n      }\n    }\n\n    .icons-title {\n      position: relative;\n      margin-top: 7px;\n      font-size: 14px;\n      transform: scale(0.8);\n    }\n  }\n}\n</style>","<template>\n  <div class=\"list-slider\">\n    <slider-name :options=\"headOptions\"></slider-name>\n    <div class=\"list-slider-content\">\n      <slider :options=\"options\" v-if=\"recommendList?.length\">\n        <div class=\"list-slider-item\" v-for=\"item in recommendList\" :key=\"item.picUrl\">\n          <router-link :to=\"`/musiclist/${item.id}`\">\n            <div class=\"img-container\">\n              <img :src=\"`${item.picUrl}?param=300y300`\" />\n            </div>\n            <div class=\"name\">{{ ellipsis(item.name, 12, '...') }}</div>\n          </router-link>\n        </div>\n      </slider>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref } from 'vue'\nimport { getRecommend } from '@/service/home'\nimport { ellipsis } from '@/assets/ts/utils'\nimport Slider from '@/components/base/slider/Slider.vue'\nimport SliderName from '../../components/base/slider-head.vue'\nimport { Options } from 'better-scroll'\n\nconst recommendList = ref<any>(null)\nconst options = ref<Options>({\n  scrollX: true,\n})\nconst headOptions = ref<Options>({\n  leftName: '推荐歌单',\n  rightName: '查看更多',\n})\n\ngetRecommend().then((res) => {\n  recommendList.value = res\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.list-slider {\n  width: 90%;\n  margin: 30px auto 0 auto;\n\n  &-content {\n    margin-left: -5px;\n\n    .list-slider-item {\n      position: relative;\n      display: inline-block;\n      margin: 0 5px;\n      overflow-y: hidden;\n      white-space: normal;\n      text-align: left;\n\n      .img-container {\n        width: 100px;\n        height: 100px;\n        border-radius: 5px;\n        background-color: #d1d1d1;\n\n        img {\n          width: 100px;\n          height: 100px;\n          border-radius: 5px;\n        }\n      }\n\n      .name {\n        margin-top: 5px;\n        max-width: 100px;\n        font-size: 13px;\n        line-height: 22px;\n        color: black;\n        height: 44px;\n        overflow: hidden;\n      }\n    }\n  }\n}\n</style>\n","<template>\n  <keep-alive>\n    <scroll :options=\"options\" :optionStyle=\"optionStyle\">\n      <div class=\"recommend\">\n        <banner-slider></banner-slider>\n        <slider-icons></slider-icons>\n        <list-slider></list-slider>\n      </div>\n    </scroll>\n  </keep-alive>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref } from 'vue'\nimport BannerSlider from './banner.vue'\nimport SliderIcons from './slider-icons.vue'\nimport ListSlider from '@/views/recommend/recommend-slider.vue'\nimport Scroll from '@/components/base/scroll/Scroll.vue'\nimport { Options } from 'better-scroll'\nimport { DEFAULT_HEAD_HEIGHT } from '../../assets/ts/constant/common'\n\nconst options = ref<Options>({\n  click: true,\n  scrollY: true,\n})\nconst optionStyle = () => {\n  const height = window.innerHeight - DEFAULT_HEAD_HEIGHT\n  return {\n    height: `${height}px`,\n  }\n}\n</script>\n","<template>\n  <div class=\"song-list mdui-list\">\n    <div class=\"song-play mdui-list-item mdui-ripple\">\n      <div class=\"song-play-icon\">\n        <i class=\"iconfont icon-play\"></i>\n      </div>\n      <div class=\"song-play-content\" @click=\"selectPlay(0)\">播放全部</div>\n      <div class=\"song-play-collect mdui-color-red mdui-ripple\">\n        + 收藏 ({{ PlaylistDetail?.subscribedCount }})\n      </div>\n    </div>\n    <div class=\"song mdui-list-item mdui-ripple\" v-for=\"(song, index) in songs\" :key=\"song\">\n      <span class=\"song-index\">{{ index + 1 }}</span>\n      <ul class=\"song-detail mdui-list\" @click=\"selectPlay(index)\">\n        <li class=\"song-name\">{{ song.name }}</li>\n        <li class=\"song-artists\">{{ ellipsisArtists(song.artists) }} - {{ song.album.name }}</li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ellipsisArtists } from '@/assets/ts/utils'\nimport { useStore } from 'vuex'\nimport { computed } from 'vue'\nimport { SelectPlayPayload } from '@/store/actions'\n\ninterface Props {\n  songs: any[]\n}\ninterface Emits {\n  (e: 'selectPlay', payload: SelectPlayPayload): void\n}\nconst props = defineProps<Props>()\nconst emits = defineEmits<Emits>()\n\nconst store = useStore()\nconst PlaylistDetail = computed(() => store.state.playlistDetail)\n\nfunction selectPlay(index: number) {\n  let payload: SelectPlayPayload = Object.create(null)\n  payload.index = index\n  payload.list = props.songs\n  emits('selectPlay', payload)\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.mdui-list-item {\n  padding: 0;\n  z-index: 1;\n}\n.song-play {\n  position: relative;\n  display: flex;\n  align-items: center;\n  &-content {\n    font-size: 18px;\n    font-weight: 500;\n  }\n  &-collect {\n    position: absolute;\n    right: 5px;\n    padding: 13px 15px;\n    border-radius: 50px;\n    font-size: 16px;\n  }\n  &-icon {\n    min-width: 60px;\n    min-height: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    i {\n      font-size: 24px;\n    }\n  }\n}\n.song-list {\n  position: absolute;\n  background-color: #ffffff;\n  left: 0;\n  right: 0;\n  border-radius: 20px;\n\n  .song {\n    display: flex;\n    width: 100%;\n    padding: 10px 0;\n    align-items: center;\n    &-index {\n      min-width: 60px;\n      min-height: 50px;\n      text-align: center;\n      line-height: 50px;\n      color: $playlist-song-index-color;\n    }\n    &-detail {\n      display: flex;\n      flex-direction: column;\n      line-height: 24px;\n      .song-name {\n        font-size: 18px;\n        font-weight: 400;\n        width: 80vw;\n        @include no-warp();\n      }\n      .song-artists {\n        font-size: 14px;\n        color: $playlist-song-index-color;\n        width: 80vw;\n        @include no-warp();\n      }\n    }\n  }\n}\n</style>\n","<template>\n  <div class=\"list-description\">\n    <div class=\"background\">\n      <img :src=\"`${playlist.coverImgUrl}?param=300y300`\" />\n    </div>\n    <div class=\"content\">\n      <div class=\"close mdui-img-circle mdui-ripple\" @click=\"close\">\n        <i class=\"mdui-icon material-icons iconfont icon-close\"></i>\n      </div>\n      <scroll :options=\"options\">\n        <div class=\"scroll-content\">\n          <div class=\"content-header\">\n            <img :src=\"`${playlist.coverImgUrl}?param=500y500`\" />\n            <p class=\"title\">{{ playlist.name }}</p>\n          </div>\n          <div class=\"divider\"></div>\n          <div class=\"content-info\">\n            <div class=\"tags-container\">\n              <p>标签：</p>\n              <ul class=\"tags\">\n                <li class=\"tag\" v-for=\"tag in playlist.tags\">\n                  {{ tag }}\n                </li>\n              </ul>\n            </div>\n\n            <div class=\"content-desc\">\n              <p class=\"desc\" v-html=\"transformContent(playlist.description)\"></p>\n            </div>\n          </div>\n        </div>\n      </scroll>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { useStore } from 'vuex'\nimport { computed, reactive } from 'vue'\nimport Scroll from '@/components/base/scroll/Scroll.vue'\nimport { Options } from 'better-scroll'\n\ninterface Emits {\n  (e: 'descClose'): void\n}\n\nconst options = reactive<Options>({\n  scrollX: false,\n  scrollY: true,\n  bounce: {\n    top: false,\n  },\n})\n\nconst playlist = computed(() => store.state.playlistDetail)\nconst store = useStore()\n\nconst emits = defineEmits<Emits>()\nfunction close(): void {\n  emits('descClose')\n}\n\nfunction transformContent(ctx: string): string {\n  let result: string = ctx.replaceAll('\\n', '<br />')\n\n  return result\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.scroll-content {\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n}\n.list-description {\n  @include absolute-full();\n  z-index: 99999;\n  .background {\n    img {\n      position: absolute;\n      width: 100%;\n      height: 100vh;\n      object-fit: cover;\n      z-index: 1;\n    }\n    &:after {\n      @include absolute-full();\n      content: '';\n      background: rgba(0, 0, 0, 0.2);\n      backdrop-filter: blur(1000px);\n      z-index: 2;\n    }\n  }\n  .content {\n    @include absolute-full();\n    z-index: 9;\n    .divider {\n      height: 1px;\n      width: 100%;\n      background: linear-gradient(\n        to left,\n        rgba(255, 255, 255, 0),\n        rgba(255, 255, 255, 0),\n        rgba(255, 255, 255, 0.1),\n        rgba(255, 255, 255, 0.15),\n        rgba(255, 255, 255, 0.2),\n        rgba(255, 255, 255, 0.15),\n        rgba(255, 255, 255, 0.1),\n        rgba(255, 255, 255, 0),\n        rgba(255, 255, 255, 0)\n      );\n    }\n    .close {\n      float: right;\n      width: 50px;\n      height: 50px;\n      line-height: 50px;\n      text-align: center;\n      i {\n        color: white;\n      }\n      z-index: 999;\n    }\n    &-header {\n      position: relative;\n      margin-top: 75px;\n      width: 100%;\n      display: flex;\n      flex-direction: column;\n      text-align: center;\n      align-items: center;\n      img {\n        width: 200px;\n        height: 200px;\n        border-radius: 10px;\n      }\n      .title {\n        position: relative;\n        margin: 30px 0;\n        color: #ffffff;\n        font-size: 20px;\n        font-weight: 550;\n      }\n    }\n    .divider {\n      height: 1px;\n      width: 100%;\n      background: linear-gradient(\n        to left,\n        rgba(255, 255, 255, 0),\n        rgba(255, 255, 255, 0),\n        rgba(255, 255, 255, 0.1),\n        rgba(255, 255, 255, 0.15),\n        rgba(255, 255, 255, 0.2),\n        rgba(255, 255, 255, 0.15),\n        rgba(255, 255, 255, 0.1),\n        rgba(255, 255, 255, 0),\n        rgba(255, 255, 255, 0)\n      );\n    }\n    &-info {\n      width: 85%;\n      margin: 20px auto 0 auto;\n      color: white;\n      font-size: 16px;\n      .tags-container {\n        display: flex;\n        align-items: center;\n        ul {\n          display: flex;\n          li {\n            padding: 10px 15px;\n            margin: 0 10px;\n            background-color: $playlist-description-tags-backgroundColor;\n            border-radius: 20px;\n            font-size: 14px;\n          }\n        }\n      }\n      .content-desc {\n        margin-top: 20px;\n        p {\n          line-height: 30px;\n          color: $playlist-description-color;\n        }\n      }\n    }\n  }\n}\n</style>\n","import { IAlbum, ISong } from '../interface'\n\nclass Song implements ISong {\n  id: number\n  name: string\n  imgUrl: string\n  artists: any[]\n  album: IAlbum\n\n  constructor(data: any) {\n    this.album = createAlbum(data.al)\n    this.id = data.id\n    this.name = data.name\n    this.artists = data.ar\n    this.imgUrl = this.album.imgUrl\n  }\n}\n\nclass Album implements IAlbum {\n  id: number\n  name: string\n  imgUrl: string\n\n  constructor(data: IAlbum) {\n    this.id = data.id\n    this.name = data.name\n    this.imgUrl = data.picUrl\n  }\n}\n\nexport function createSong(data: ISong | any): Song {\n  return new Song(data)\n}\n\nexport function createAlbum(data: IAlbum): Album {\n  return new Album(data)\n}\n","export interface MusicListHeaderIcons {\n  code: string\n  content?: string\n}\n\nexport const MUSIC_LIST_HEADER_ICONS: MusicListHeaderIcons[] = [\n  {\n    code: 'icon-xiaoxi',\n    content: '',\n  },\n  {\n    code: 'icon-share',\n    content: '',\n  },\n  {\n    code: 'icon-download',\n    content: '下载',\n  },\n  {\n    code: 'icon-select',\n    content: '多选',\n  },\n]\n","import { computed, ref } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport { getAllTrack } from '@/service/song'\nimport { createSong } from '@/assets/ts/song/packSong'\nimport { getPlaylist } from '@/service/song'\nimport { MusicListHeaderIcons, MUSIC_LIST_HEADER_ICONS } from '@/assets/ts/constant/music'\nimport { useStore } from 'vuex'\n\nexport default function useRouterHook(): any {\n  const store = useStore()\n  const Icons = ref<MusicListHeaderIcons[]>(MUSIC_LIST_HEADER_ICONS)\n  const resolvedIcons = ref<MusicListHeaderIcons[]>(Icons.value)\n  const songs = ref<any[]>([])\n  const playlist = computed(() => store.state.playlistDetail)\n  const creator = ref<Object>(Object.create(null))\n  const route = useRoute()\n  const router = useRouter()\n\n  parseRoute()\n\n  function parseRoute(): void {\n    const id = route.params?.id\n    if (typeof id === 'undefined') {\n      routeWithoutId()\n      return\n    }\n\n    routeWithId(id as string)\n  }\n\n  function routeWithoutId(): void {\n    return router.back()\n  }\n  function routeWithId(id: string): void {\n    getAllTrack(id).then((res) => {\n      if (Array.isArray(res)) {\n        res.forEach((song) => {\n          songs.value.push(createSong(song))\n        })\n      }\n    })\n    getPlaylist(id).then((res) => {\n      store.dispatch('setPlaylistDetail', res)\n      creator.value = playlist.value.creator\n      const playlistVal = playlist.value\n      resolvedIcons.value = resolvedIcons.value.map((icon, index) => {\n        if (index === 0) {\n          icon.content = playlistVal.commentCount\n        }\n        if (index === 1) {\n          icon.content = playlistVal.shareCount\n        }\n        return icon\n      })\n    })\n  }\n\n  return {\n    songs,\n    playlist,\n    creator,\n    resolvedIcons,\n  }\n}\n","<template>\n  <div class=\"mdui-toolbar tab mdui-text-color-white\">\n    <a class=\"mdui-btn mdui-btn-icon\" @click=\"goBack\"\n      ><i class=\"mdui-icon material-icons iconfont icon-i-back\"></i\n    ></a>\n    <span class=\"mdui-typo-title\">歌单</span>\n    <div class=\"mdui-toolbar-spacer\"></div>\n    <a class=\"mdui-btn mdui-btn-icon\">\n      <i class=\"mdui-icon material-icons iconfont icon-search\"></i>\n    </a>\n  </div>\n</template>\n<script lang=\"ts\" setup>\nimport { useRouter } from 'vue-router'\n\nconst router = useRouter()\nfunction goBack() {\n  router.back()\n}\n</script>\n<style lang=\"scss\" scoped>\n.tab {\n  position: fixed;\n  width: 100%;\n  z-index: 999;\n}\n.song-play {\n  position: absolute;\n  top: 56px;\n  left: 0;\n  right: 0;\n  z-index: 999;\n  background-color: #ffffff;\n  border-radius: 20px;\n}\n</style>\n","import { computed, nextTick, ref } from 'vue'\n\nexport default function useScroll(playlist: any): any {\n  const paddingBottom = ref<string>('400px')\n  const diffY = ref<number>(330)\n  const bgImageStyle = computed(() => {\n    const diffYVal: number = diffY.value\n    let ZIndex: number = 0\n    if (diffYVal <= 56) {\n      ZIndex = 99\n    } else {\n      ZIndex = 0\n    }\n    if (diffYVal <= 56) {\n      paddingBottom.value = '56px'\n    } else {\n      paddingBottom.value = '400px'\n    }\n    return {\n      paddingBottom: paddingBottom.value,\n      backgroundImage: `url(${playlist.value.coverImgUrl}?param=170y170)`,\n      'z-index': ZIndex,\n      maxHeight: '56px',\n    }\n  })\n\n  const onScroll = (pos: any): void => {\n    nextTick(() => {\n      const y: number = -pos.y\n      const songRef: any = document.querySelector('.song-list-ref')\n      const diff: number = songRef.offsetTop - y\n      diffY.value = diff\n    })\n  }\n\n  return {\n    bgImageStyle,\n    onScroll,\n  }\n}\n","<template>\n  <div class=\"music-list\" v-loading=\"!loading\" v-if=\"songs.length\">\n    <template v-if=\"songs.length\">\n      <list-tab></list-tab>\n      <div class=\"header\">\n        <div class=\"background\" :style=\"bgImageStyle\"></div>\n        <div class=\"background-blur\"></div>\n        <div class=\"header-content\">\n          <div class=\"header-content-left\">\n            <img class=\"playlist-avatar\" :src=\"`${playlist.coverImgUrl}?param=500y500`\" />\n          </div>\n          <div class=\"header-content-right\">\n            <div class=\"playlist-name\">{{ playlist.name }}</div>\n            <div class=\"playlist-creator\">\n              <img class=\"playlist-creator-avatar cycle\" :src=\"`${creator.avatarUrl}?param=100y100`\" />\n              <div class=\"playlist-creator-name\">\n                {{ creator.nickname }} <i class=\"iconfont icon-right\"></i>\n              </div>\n            </div>\n            <div class=\"playlist-description\" @click=\"showDesc = !showDesc\">\n              {{ ellipsis(playlist.description, 20) }}\n              <i class=\"iconfont icon-right\"></i>\n            </div>\n          </div>\n        </div>\n        <div class=\"header-bottom\" ref=\"scrollRef\">\n          <div class=\"header-bottom-icon\" v-for=\"item in resolvedIcons\">\n            <i class=\"iconfont\" :class=\"item.code\"></i>\n            <p>{{ item.content }}</p>\n          </div>\n        </div>\n      </div>\n      <scroll :options=\"scrollOptions\" v-if=\"songs.length\" @scroll=\"onScroll\">\n        <song-list\n          @selectPlay=\"selectPlay\"\n          @playAll=\"selectPlay\"\n          v-if=\"songs.length\"\n          :songs=\"songs\"\n          class=\"song-list-ref\"\n        ></song-list>\n      </scroll>\n    </template>\n    <transition name=\"fade\">\n      <list-description v-if=\"showDesc\" @descClose=\"showDesc = !showDesc\"></list-description>\n    </transition>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, ref } from 'vue'\nimport { useStore } from 'vuex'\nimport SongList from '../../components/base/song-list.vue'\nimport ListDescription from '@/components/list-description.vue'\nimport useRouterHook from '@/views/music-list/use-router'\nimport ListTab from '@/components/list-tab.vue'\nimport { ellipsis } from '@/assets/ts/utils'\nimport useScroll from '@/views/music-list/use-scroll'\nimport { Options } from 'better-scroll'\nimport Scroll from '@/components/base/scroll/Scroll.vue'\nimport { SelectPlayPayload } from '@/store/actions'\nimport axios from 'axios'\n\naxios.get('https://autumnfish.cn/playlist/track/all?id=6990881882&limit=10&offset=10').then((res) => {\n  console.log(res)\n})\n\nconst { songs, playlist, creator, resolvedIcons } = useRouterHook()\nconst { onScroll, bgImageStyle } = useScroll(playlist)\nconst scrollOptions = ref<Options>({\n  scrollY: true,\n  click: true,\n  bounce: {\n    top: false,\n  },\n  probeType: 3,\n})\nconst loading = computed(() => {\n  return playlist.value && songs.value.length\n})\n\nconst store = useStore()\n\nconst showDesc = ref<Boolean>(false)\n\nfunction selectPlay(payload: SelectPlayPayload): void {\n  store.dispatch('selectPlay', payload)\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.scroll-content {\n  height: auto;\n}\n.music-list {\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  background-color: white;\n  z-index: 999;\n  overflow: hidden;\n  .tab {\n    position: fixed;\n    width: 100%;\n  }\n  .header {\n    position: relative;\n    height: 0;\n    padding-bottom: 90%;\n    .background {\n      width: 100%;\n      position: relative;\n      background-size: cover;\n      &:after {\n        content: '';\n        position: absolute;\n        left: 0;\n        right: 0;\n        top: 0;\n        bottom: 0;\n        background-color: rgba(0, 0, 0, 0.15);\n        backdrop-filter: blur(50px);\n      }\n    }\n    &-content {\n      position: absolute;\n      top: 56px;\n      left: 0;\n      max-height: 120px;\n      padding: 20px 2.5%;\n      display: flex;\n      &-left {\n        .playlist-avatar {\n          width: 150px;\n          height: 150px;\n          border-radius: 5px;\n        }\n      }\n      &-right {\n        .icon-right {\n          font-size: 12px;\n        }\n        margin-left: 15px;\n        .playlist-name {\n          color: #ffffff;\n          font-size: 18px;\n          font-weight: bold;\n          line-height: 28px;\n        }\n        .playlist-creator {\n          display: flex;\n          align-items: center;\n          margin-top: 10px;\n          &-name {\n            color: $playlist-creator-name-color;\n            margin-left: 5px;\n            font-size: 16px;\n          }\n          &-avatar {\n            width: 30px;\n            height: 30px;\n          }\n        }\n        .playlist-description {\n          position: absolute;\n          margin-top: 14px;\n          color: $playlist-creator-description-color;\n          font-size: 13px;\n          line-height: 20px;\n          display: flex;\n          align-items: center;\n          bottom: -10px;\n        }\n      }\n    }\n    &-bottom {\n      position: absolute;\n      display: flex;\n      bottom: 5%;\n      margin: 0 5%;\n      width: 90%;\n      color: $playlist-creator-name-color;\n      &-icon {\n        flex: 1;\n        text-align: center;\n        line-height: 24px;\n        i {\n          font-size: 24px;\n          color: #ffffff;\n        }\n        p {\n          font-size: 14px;\n        }\n      }\n    }\n  }\n  .song-list {\n    position: absolute;\n    top: 340px;\n  }\n}\n</style>\n","<template>\n  <div class=\"comment\" v-if=\"currentComment\">\n    <div class=\"header\">\n      <div class=\"mdui-toolbar\">\n        <a href=\"javascript:;\" class=\"mdui-btn mdui-btn-icon\" @click=\"back\">\n          <i class=\"mdui-icon material-icons iconfont icon-i-back\"></i>\n        </a>\n        <span class=\"mdui-typo-title\">评论({{ currentComment.total }})</span>\n        <div class=\"mdui-toolbar-spacer\"></div>\n        <a href=\"javascript:;\" class=\"mdui-btn mdui-btn-icon\">\n          <i class=\"mdui-icon material-icons iconfont icon-share\"></i>\n        </a>\n      </div>\n      <div class=\"song-info\">\n        <div class=\"song-info-img\">\n          <img :src=\"`${currentCommentSong.imgUrl}?param=50y50`\" />\n        </div>\n        <p class=\"song-info-name\">\n          {{ currentCommentSong.name }}\n          <span class=\"song-info-ar\"> - {{ ellipsisArtists(currentCommentSong.artists) }}</span>\n        </p>\n      </div>\n    </div>\n    <div class=\"divider\"></div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { useRoute, useRouter } from 'vue-router'\nimport { getSongComment, getSongDetail } from '@/service/song'\nimport { onBeforeMount, ref } from 'vue'\nimport { createSong } from '@/assets/ts/song/packSong'\nimport { ellipsisArtists } from '@/assets/ts/utils'\n\nconst route = useRoute()\nconst router = useRouter()\n\nconst currentComment = ref<any>()\nconst currentCommentSong = ref<any>()\nconst currentPage = ref<number>(0)\n\nonBeforeMount(async () => {\n  const comment = await getComment()\n  const song = await getSongDetail(route.params.id as string)\n  currentComment.value = comment\n  currentCommentSong.value = createSong((song as any).songs[0])\n  currentComment.value = Array.prototype.concat(currentComment.value.hotComments, currentComment.value.comments)\n  console.log(currentComment.value)\n})\n\nasync function getComment(): Promise<any> {\n  const result = await getSongComment(route.params.id as string, currentPage.value)\n  return result\n}\n\nfunction back(): void {\n  router.back()\n}\n</script>\n<style lang=\"scss\" scoped>\n.comment {\n  @include absolute-full();\n  background-color: #ffffff;\n  z-index: 9999;\n  .header {\n    .song-info {\n      padding: 10px;\n      display: flex;\n      align-items: center;\n      &-img {\n        width: 25px;\n        height: 25px;\n        border-radius: 50%;\n        background-color: black;\n        padding: 7px;\n        img {\n          width: 25px;\n          height: 25px;\n          border-radius: 50%;\n        }\n      }\n      &-name {\n        margin-left: 10px;\n        font-size: 16px;\n        font-weight: 550;\n        width: 80%;\n        @include no-warp();\n      }\n      &-ar {\n        font-size: 14px;\n        color: $playlist-song-index-color;\n      }\n    }\n  }\n  .divider {\n    height: 7px;\n    width: 100vw;\n    background-color: rgba(0, 0, 0, 0.05);\n  }\n}\n</style>\n","import { createRouter, createWebHistory, RouteRecordRaw } from 'vue-router'\nimport HomeVideo from '@/views/home-video/home-video.vue'\nimport HomeVillage from '@/views/home-village/home-village.vue'\nimport Mine from '@/views/mine/Mine.vue'\nimport Recommend from '@/views/recommend/Recommend.vue'\nimport MusicList from '@/views/music-list/music-list.vue'\nimport Comment from '@/components/comment/Comment.vue'\nimport * as process from \"process\";\n\nconst routes: Array<RouteRecordRaw> = [\n  {\n    path: '/',\n    redirect: '/recommend',\n  },\n  {\n    path: '/mine',\n    component: Mine,\n  },\n  {\n    path: '/recommend',\n    component: Recommend,\n  },\n  {\n    path: '/homevideo',\n    component: HomeVideo,\n  },\n  {\n    path: '/homevillage',\n    component: HomeVillage,\n  },\n  {\n    path: '/musiclist/:id',\n    components: {\n      transformInOut: MusicList,\n    },\n  },\n  {\n    path: '/comment/:id',\n    components: {\n      transformInOut: Comment,\n    },\n    beforeEnter: (to, from) => {\n      const id = to.params.id\n      if (isNaN(Number(id))) {\n        return {\n          path: from.fullPath,\n        }\n      }\n    },\n  },\n]\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes,\n})\n\nexport default router\n","import { load } from '@/assets/ts/store'\nimport { PLAY_MODE } from '@/components/player/use-mode'\n\nexport interface State {\n  playlistDetail: any\n  fullScreen: boolean\n  playlist: any[]\n  playing: boolean\n  currentIndex: number\n  currentTime: number\n  duration: number\n  favoriteList: any[]\n  playMode: PLAY_MODE\n  sequenceList: any[]\n  onProgress: boolean\n}\n\nconst state: State = {\n  playlistDetail: {},\n  playing: false,\n  playlist: [],\n  favoriteList: load(),\n  currentIndex: 0,\n  currentTime: 0,\n  duration: 0,\n  fullScreen: false,\n  playMode: PLAY_MODE.sequence,\n  sequenceList: [],\n  onProgress: false,\n}\n\nexport default state\n","import { State } from '@/store/state'\n\nimport { setFavorite } from '@/assets/ts/store'\nimport { PLAY_MODE } from '@/components/player/use-mode'\n\nconst mutations = {\n  setPlaylistDetail(state: State, list: any): void {\n    state.playlistDetail = list\n  },\n  setPlaying(state: State, playing: boolean): void {\n    state.playing = playing\n  },\n  setPlaylist(state: State, playlist: any[]): void {\n    state.playlist = playlist\n  },\n  setSequenceList(state: State, playlist: any[]): void {\n    state.sequenceList = playlist\n  },\n  setPlayMode(state: State, mode: PLAY_MODE): void {\n    state.playMode = mode\n  },\n  setFullScreen(state: State, screen: boolean): void {\n    state.fullScreen = screen\n  },\n  setCurrentIndex(state: State, index: number): void {\n    state.currentIndex = index\n  },\n  setCurrentTime(state: State, seconds: number): void {\n    state.currentTime = seconds\n  },\n  setDuration(state: State, duration: number): void {\n    state.duration = duration\n  },\n  setOnProgress(state: State, onProgress: boolean): void {\n    state.onProgress = onProgress\n  },\n  setFavoriteList(state: State, favorite: any[]): void {\n    state.favoriteList = favorite\n    setFavorite(favorite)\n  },\n  addLyric(state: State, lyric: any): void {\n    state.sequenceList[state.currentIndex].lyric = lyric\n  },\n}\n\nexport default mutations\n","import { ActionContext } from 'vuex'\nimport { State } from '@/store/state'\nimport * as _ from 'lodash'\nimport { shuffle } from 'lodash'\nimport { PLAY_MODE } from '@/components/player/use-mode'\n\nexport interface SelectPlayPayload {\n  list: any[]\n  index: number\n}\n\nexport function setPlaylistDetail(ctx: ActionContext<State, State>, list: any): void {\n  const { commit } = ctx\n  commit('setPlaylistDetail', list)\n}\n\nexport function selectPlay(ctx: ActionContext<State, State>, payload: SelectPlayPayload): void {\n  const { commit, state } = ctx\n  const { list, index } = payload\n  let playlist: any[] = list\n  let playIndex: number = index\n  if (state.playMode === PLAY_MODE.random) {\n    playlist.forEach((song, forIndex) => {\n      if (list[index].id === state.playlist[forIndex].id) {\n        playIndex = forIndex\n      }\n    })\n    playlist = state.playlist\n  }\n  commit('setPlaying', true)\n  commit('setPlaylist', playlist)\n  commit('setCurrentIndex', playIndex)\n  commit('setFullScreen', true)\n  commit('setPlayMode', state.playMode)\n  commit('setSequenceList', list)\n  commit('setCurrentTime', 0)\n}\n\nexport function resetTime(ctx: ActionContext<State, State>, payload: SelectPlayPayload): void {\n  const { commit } = ctx\n\n  commit('setDuration', 0)\n}\n\nexport function addFavorite(ctx: ActionContext<State, State>): void {\n  const { commit, state, getters } = ctx\n  const currentSong: any = getters.currentSong\n\n  let favoriteList: any[] = _.cloneDeep(state.favoriteList)\n  let targetIndex: number = -1\n\n  favoriteList.forEach((song, index) => {\n    if (song.id === currentSong.id) {\n      targetIndex = index\n    }\n  })\n\n  if (targetIndex > -1) {\n    remove()\n  } else {\n    add()\n  }\n\n  commit('setFavoriteList', favoriteList)\n\n  function add(): void {\n    favoriteList.push(currentSong)\n  }\n  function remove(): void {\n    favoriteList = favoriteList.filter((song, index) => index !== targetIndex)\n  }\n}\n\nexport function togglePlayMode(ctx: ActionContext<State, State>): void {\n  const { commit, state, getters } = ctx\n  let playMode = state.playMode\n  if (playMode === PLAY_MODE.sequence) {\n    playMode = PLAY_MODE.random\n    let sufList: any[] = shuffle(state.sequenceList)\n    let sufIndex: number\n    sufList.forEach((song, index) => {\n      if (song.id === getters.currentSong.id) {\n        sufIndex = index\n      }\n    })\n    commit('setPlaylist', sufList)\n    commit('setCurrentIndex', sufIndex!)\n  } else if (playMode === PLAY_MODE.random) {\n    playMode = PLAY_MODE.loop\n  } else {\n    state.sequenceList.forEach((song, index) => {\n      if (song.id === getters.currentSong.id) {\n        commit('setPlaylist', state.sequenceList)\n        commit('setCurrentIndex', index)\n      }\n    })\n    playMode = PLAY_MODE.sequence\n  }\n\n  commit('setPlayMode', playMode)\n}\n","import { State } from '@/store/state'\n\nexport const currentSong = (state: State) => {\n  return state.playlist[state.currentIndex] || []\n}\n","import { createLogger, createStore } from 'vuex'\nimport state, { State } from '@/store/state'\nimport mutations from './mutations'\nimport * as actions from './actions'\nimport * as getters from './getters'\n\nconst debug = process.env.NODE_ENV !== 'production'\n\nexport default createStore<State>({\n  state,\n  actions,\n  mutations,\n  getters,\n  strict: debug,\n  plugins: debug ? [createLogger()] : [],\n})\n","export function addClass(el: HTMLElement, clsName: string): void {\n  if (!el.classList.contains(clsName)) {\n    el.classList.add(clsName)\n  }\n}\n\nexport function removeClass(el: HTMLElement, clsName: string): void {\n  el.classList.remove(clsName)\n}\n","import { createApp, Directive } from 'vue'\nimport { addClass, removeClass } from '@/assets/ts/dom'\nimport Loading from './Loading.vue'\n\nconst relativeCls = 'g-relative'\n\nconst loadingDirective: Directive = {\n  mounted(el: any, binding: any) {\n    const app = createApp(Loading)\n    const instance = app.mount(document.createElement('div'))\n    el.instance = instance\n\n    if (binding.value) {\n      append(el)\n    }\n  },\n\n  updated(el: any, binding: any) {\n    if (binding.value !== binding.oldValue) {\n      if (binding.value) {\n        append(el)\n      } else {\n        remove(el)\n      }\n    }\n  },\n}\n\nfunction append(el: any): void {\n  const style = getComputedStyle(el)\n  if (['relative'].indexOf(style.position) === -1) {\n    addClass(el, relativeCls)\n  }\n  el.appendChild(el.instance.$el)\n}\n\nfunction remove(el: any): void {\n  removeClass(el, relativeCls)\n  el.removeChild(el.instance.$el)\n}\n\nexport default loadingDirective\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport store from './store'\nimport '@/assets/scss/index.scss'\nimport 'mdui'\nimport 'mdui/dist/css/mdui.min.css'\nimport loadingDirective from '@/directives/loading/directive'\n\ncreateApp(App).use(store).use(router).directive('loading', loadingDirective).mount('#app')\n"],"names":["config","storage","Recommend","_.cloneDeep","shuffle","App"],"mappings":"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"}